
SM_FUNCS_SCRIPT=$(realpath "${BASH_SOURCE[0]}")
SM_FUNCS_DIR=$(dirname "$SM_FUNCS_SCRIPT")

# This file is sourced from other bash scripts

DETAIL_DIR="${SM_FUNCS_DIR}/secret-detail"
DL_DIR="${SM_FUNCS_DIR}/download"
SECRET_WORKTOP_DIR="${SM_FUNCS_DIR}/work"
SECRET_WORKTOP_BACKUP_DIR="${SM_FUNCS_DIR}/secret_backup"

declare -a SECRET_NAMES_ARRAY
function getSecretsIds() {
  mkdir -p "${DETAIL_DIR}"
  SECRET_NAMES_ARRAY=($(find "${DETAIL_DIR}" -maxdepth 1 -type f -name "secrets-*.json" -printf '%f\n' | sed 's/^secrets-//' | sed 's/\.json$//'))
}

function confirm() {
  while true; do
    read -p "$1 (Y/N): " response
    case "$response" in
      [Yy]* ) return 0;;
      [Nn]* ) return 1;;
      * ) echo "Please answer Y or N.";;
    esac
  done
}

function getSecretDetailFilename() {
  local orgname
  orgname="$1"
  mkdir -p "${DETAIL_DIR}"
  echo "${DETAIL_DIR}/secrets-${orgname}.json"
}

function getEncryptedSecretsFilename() {
  local orgname
  orgname="$1"
  
  echo "${SECRET_WORKTOP_DIR}/${orgname}-secrets.7z"
}

function getSecretsMountPath() {
  local orgname
  local mountpath

  orgname="$1"
  mountpath="${SECRET_WORKTOP_DIR}/${orgname}/mount"
  mkdir -p "${mountpath}"
  echo "${mountpath}"
}


# Check if jq is installed
if ! command -v jq &> /dev/null; then
  echo "Error: jq is not installed. Please install it to process JSON."
  return 1
fi

# Check if curl is installed
if ! command -v curl &> /dev/null; then
  echo "Error: curl is not installed. Please install it."
  return 1
fi