# HOWTO - Managing Build Automation Secrets

## Assumptions

We assume that you are running on Linux, with normal tools installed including: jq, curl, python, p7zip-full

The secret-detail folder contains metadata for secrets.  If you are managing existing secrets, you must have metadata for the existing secrets defined.

To publish to an azure storage account, you must have your storage account details defined in secret-detail/azure-token.json.

To configure a GitHub repository's secrets, you must also have details defined in secret-detail/github-token.json.

See the readme in the secret-detail directory for details on the format for these files.

## Operations

### Create NEW secrets

./make_secrets_dir_template.sh <orgname> <password>

The above command will create a new secret-detail metadata file and will create a template in work/<orgname>.

### Create an encrypted secrets file

./make_secrets_file.sh <orgname>

This creates the encrypted 7z file in the work/ folder.

### Upload the encrypted secrets file to your storage account

./sm_put.sh <orgname>

The above uploads your encrypted secrets file to the storage account referenced by the azure-token.json file found in the secret-detail directory.

### Configure GitHub Build Secrets

./set_secrets_github.sh <orgname> <GitHub Organization> <GitHub Repository>

The above configures KOSBUILD_SECRET_URL and KOSBUILD_SECRET_PASSWORD secrets in the specified GitHub repository.  It relies on credentials found in github-token.json in the secret-detail directory.